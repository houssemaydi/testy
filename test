import java.lang.annotation.Annotation;
import java.lang.reflect.Field;

public class UpdateColumnAnnotations {

    public static void main(String[] args) {
        Class<?> clazz = Student.class;

        // Get all fields in the class
        Field[] fields = clazz.getDeclaredFields();

        for (Field field : fields) {
            // Check if the field has a @Column annotation
            if (field.isAnnotationPresent(Column.class)) {
                Column columnAnnotation = field.getAnnotation(Column.class);

                // Get the field name
                String fieldName = field.getName();

                // Update the 'azer' attribute if the field name ends with "Preview"
                if (fieldName.endsWith("Preview")) {
                    try {
                        // Use reflection to set the 'azer' attribute to true
                        Field azerField = columnAnnotation.getClass().getDeclaredField("azer");
                        azerField.setAccessible(true);
                        azerField.set(columnAnnotation, true);
                    } catch (NoSuchFieldException | IllegalAccessException e) {
                        e.printStackTrace();
                    }
                }
            }
        }

        // Now, you can use the updated class with the modified annotations
    }
}
